---
- name: Stop syncthing service as user 
  systemd:
    name: syncthing.service
    state: stopped
    scope: user
  become: yes
  become_user: "{{ syncthing_user }}"
  
- name: Setup GUI port.
  xml:
    path: "{{ syncthing_config }}"
    xpath: /configuration/gui/address
    value: "127.0.0.1:{{ syncthing_gui_port }}"
    
- name: Remove existing device entries.
  xml:
    path: "{{ syncthing_config }}"
    xpath: /configuration/device
    state: absent
    
- name: Adding all of the devices.
  xml:
    path: "{{ syncthing_config }}"
    xpath: /configuration
    pretty_print: yes
    add_children:
      - device: 
          id: "{{ item.value['id'] }}"
          name: "{{ item.key }}"
          compression: metadata
          introducer: "false"
          skipIntroductionRemovals: "false"
          introducedBy: ""
          _:
            - address: dynamic
            - paused: "false"
            - autoAcceptFolders: "false"
  with_dict: "{{ syncthing_hosts }}"
  # notify:
  #   - restart syncthing
- name: Remove existing device entries.
  xml:
    path: "{{ syncthing_config }}"
    xpath: /configuration/folder
    state: absent
- name: Added the folders.
  xml:
    path: "{{ syncthing_config }}"
    xpath: /configuration
    pretty_print: yes
    add_children:
      - folder:
          id: "{{ syncthing_folders[item.name]['id'] }}"
          label: "{{ item['name'] }}"
          path: "{{ item['path'] }}"
          type: sendreceive
          rescanIntervalS: "60"
          fsWatcherEnabled: "true"
          fsWatcherDelayS: "10"
          ignorePerms: "false"
          autoNormalize: "true"
          _: "[{% for host in item['share_with'] %}{'device': {'id': '{{ syncthing_hosts[host]['id'] }}'}},{% endfor %}{'order': 'random'}]"
  with_items: "{{ syncthing_shares[ansible_hostname]['shares'] }}"
- name: Start syncthing service as user 
  systemd:
    name: syncthing.service
    state: started
    scope: user
  become: yes
  become_user: "{{ syncthing_user }}"
